<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Calendar</title>
    <style>
        .calendar {
            width: 80%;
            max-width: 600px;
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            border-radius: 5px;
        }

        .month-year {
            font-size: 1.5em;
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr); /* 7 columns for days */
            gap: 10px;
            margin-top: 20px;
        }

        .day, .empty {
            background-color: #f4f4f4;
            border-radius: 5px;
            padding: 10px;
            text-align: center;
            cursor: pointer;
        }

        .day-name, .day {
            text-align: center;
            padding: 10px;
        }

        .day-name {
            font-weight: bold;
        }

        .day:hover {
            background-color: #4CAF50;
            color: white;
        }

        .today {
            background-color: #4CAF50;
            color: white;
        }

        .empty {
            visibility: hidden;
        }

        .event-marker {
            color: red;
            font-weight: bold;
        }

        .buttons {
            margin-top: 20px;
        }

        .action-button {
            padding: 10px 15px;
            margin-right: 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

        .action-button.delete {
            background-color: #DC3545;
        }

        .action-button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .event-form {
            display: none;
            margin-top: 20px;
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .event-form input, .event-form textarea {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .event-form button {
            padding: 10px;
            background-color: #28a745;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

        .event-form button.cancel {
            background-color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="calendar">
        <div class="calendar-header">
            <button class="nav-button" onclick="prevMonth()">❮</button>
            <div class="month-year" id="monthYear"></div>
            <button class="nav-button" onclick="nextMonth()">❯</button>
        </div>

        <div class="calendar-grid">
            <div class="day-name">Sun</div>
            <div class="day-name">Mon</div>
            <div class="day-name">Tue</div>
            <div class="day-name">Wed</div>
            <div class="day-name">Thu</div>
            <div class="day-name">Fri</div>
            <div class="day-name">Sat</div>
        </div>

        <div class="calendar-grid" id="daysContainer">
            <!-- Days will be dynamically generated here -->
        </div>

        <div class="buttons">
            <button class="action-button" id="createEventBtn" disabled onclick="openEventForm()">Create Event</button>
            <button class="action-button delete" id="deleteEventBtn" disabled onclick="deleteEvent()">Delete Event</button>
        </div>
    </div>

    <div class="event-form" id="eventForm">
        <h3>Create Event for <span id="selectedDate"></span></h3>
        <input type="text" id="eventName" placeholder="Event Name" required>
        <textarea id="eventDescription" rows="3" placeholder="Event Description" required></textarea>
        <button onclick="saveEvent()">Save Event</button>
        <button class="cancel" onclick="closeEventForm()">Cancel</button>
    </div>

    <script>
        let currentMonth = new Date().getMonth();
        let currentYear = new Date().getFullYear();
        let selectedDay = null; // เก็บวันที่ที่ผู้ใช้เลือก
        let events = JSON.parse(localStorage.getItem('events')) || {}; // เก็บข้อมูลกิจกรรมแต่ละวัน

        // Function to generate the calendar
        function generateCalendar(month, year) {
            const monthNames = [
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ];

            const daysContainer = document.getElementById("daysContainer");
            daysContainer.innerHTML = ''; // Clear previous days

            // Set month and year title
            document.getElementById("monthYear").textContent = monthNames[month] + " " + year;

            const firstDay = new Date(year, month, 1).getDay(); // Day of the week the month starts on
            const daysInMonth = new Date(year, month + 1, 0).getDate(); // Number of days in the month

            // Add empty cells for days before the 1st of the month
            for (let i = 0; i < firstDay; i++) {
                const emptyCell = document.createElement("div");
                emptyCell.classList.add("empty");
                daysContainer.appendChild(emptyCell);
            }

            // Add days of the month
            for (let day = 1; day <= daysInMonth; day++) {
                const dayCell = document.createElement("div");
                dayCell.classList.add("day");
                dayCell.textContent = day;

                // Highlight today
                const today = new Date();
                if (day === today.getDate() && month === today.getMonth() && year === today.getFullYear()) {
                    dayCell.classList.add("today");
                }

                // Check if there are events for this day
                if (events[`${day}-${month}-${year}`]) {
                    const eventMarker = document.createElement('span');
                    eventMarker.classList.add('event-marker');
                    eventMarker.textContent = ' *';
                    dayCell.appendChild(eventMarker);
                }

                // Add event listener for selecting day
                dayCell.addEventListener('click', function() {
                    selectDay(day, month, year, dayCell);
                });

                daysContainer.appendChild(dayCell);
            }
        }

        // Function to select a day
        function selectDay(day, month, year, dayCell) {
            // Clear previous selected day highlight
            const previousSelected = document.querySelector('.selected');
            if (previousSelected) {
                previousSelected.classList.remove('selected');
            }

            // Highlight the new selected day
            dayCell.classList.add('selected');
            selectedDay = { day, month, year };

            // Enable create and delete buttons
            document.getElementById('createEventBtn').disabled = false;
            document.getElementById('deleteEventBtn').disabled = !events[`${day}-${month}-${year}`];
        }

        // Function to open the event creation form
        function openEventForm() {
            if (!selectedDay) return;

            const { day, month, year } = selectedDay;
            document.getElementById('selectedDate').textContent = `${day}/${month + 1}/${year}`;
            document.getElementById('eventForm').style.display = 'block';
        }

        // Function to close the event creation form
        function closeEventForm() {
            document.getElementById('eventForm').style.display = 'none';
            document.getElementById('eventName').value = '';
            document.getElementById('eventDescription').value = '';
        }

        // Function to save event
        function saveEvent() {
            const eventName = document.getElementById('eventName').value;
            const eventDescription = document.getElementById('eventDescription').value;

            if (!eventName || !eventDescription) {
                alert('Please fill in all fields.');
                return;
            }

            const { day, month, year } = selectedDay;
            events[`${day}-${month}-${year}`] = { name: eventName, description: eventDescription };
            localStorage.setItem('events', JSON.stringify(events));

            closeEventForm();
            generateCalendar(currentMonth, currentYear); // Refresh the calendar
        }

        // Function to delete event
        function deleteEvent() {
            const { day, month, year } = selectedDay;
            delete events[`${day}-${month}-${year}`];
            localStorage.setItem('events', JSON.stringify(events));

            generateCalendar(currentMonth, currentYear); // Refresh the calendar
            document.getElementById('deleteEventBtn').disabled = true; // Disable delete button
        }

        // Function to go to the previous month
        function prevMonth() {
            currentMonth--;
            if (currentMonth < 0) {
                currentMonth = 11;
                currentYear--;
            }
            generateCalendar(currentMonth, currentYear);
        }

        // Function to go to the next month
        function nextMonth() {
            currentMonth++;
            if (currentMonth > 11) {
                currentMonth = 0;
                currentYear++;
            }
            generateCalendar(currentMonth, currentYear);
        }

        // Generate the calendar when the page loads
        generateCalendar(currentMonth, currentYear);
    </script>
</body>
</html>
